# -*- coding: utf-8 -*-
"""데이터 시각화-우크라이나.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1J3beT-CT0_Gw9zdOQYdubqhaeVSTo7tr

**# 우크라이나 뉴스 네트워크 그래프**

1) 빅카인즈 사이트에서 검색어를 우크라이나로 입력 후 엑셀 파일로 다운로드하여 csv 파일로 저장

2) 한글 폰트 설치 후 라이브러리 불러오기

3) 분석 알고리즘 apriori로 가능성이 높은 연관규칙만 계산하도록 필터링

4) 네트워크 그래프를 생성하고 그래프에 나타난 연관관계분석
"""

#한글폰트 적용
import sys

# Google Colab 환경에서 실행 중인지 확인
if 'google.colab' in sys.modules:
    # debconf를 Noninteractive 모드로 설정
    !echo 'debconf debconf/frontend select Noninteractive' | \
    debconf-set-selections

    # fonts-nanum 패키지를 설치
    !sudo apt-get -qq -y install fonts-nanum

    # Matplotlib의 폰트 매니저 가져오기
    import matplotlib.font_manager as fm

    # 나눔 폰트의 시스템 경로 찾기
    font_files = fm.findSystemFonts(fontpaths=['/usr/share/fonts/truetype/nanum'])

    # 찾은 각 나눔 폰트를 Matplotlib 폰트 매니저에 추가
    for fpath in font_files:
        fm.fontManager.addfont(fpath)

import matplotlib.font_manager as fm

# 설치된 모든 글꼴 가져오기
font_list = fm.findSystemFonts(fontpaths=None, fontext='ttf')

# 글꼴 이름 출력
for font in font_list:
    font_name = fm.FontProperties(fname=font).get_name()
    print(font_name)

!pip install konlpy
!pip install networkx==2.7.1

import numpy as np
import pandas as pd
import re
import matplotlib.pyplot as plt
import networkx as nx
from konlpy.tag import Hannanum
hannanum = Hannanum()

f = open('우크라이나.csv', 'r', encoding='cp949')
lines = f.readlines()
print(lines)
f.close()

dataset = []
for i in range(len(lines)):
  dataset.append(hannanum.nouns(re.sub('[^가-힣a-zA-Z\s]','', lines[i])))
dataset[:3]

!pip install apyori
from apyori import apriori
#연관규칙 데이터프레임 생성하기
result = (list(apriori(dataset, min_support=0.01)))
df = pd.DataFrame(result)
#항목 수가 2인 것만 남기기
df['length'] = df['items'].apply(lambda x: len(x))
df = df[(df['length']==2)&(df['support']>=0.01)].sort_values(by='support', ascending=False)
df.head(3)

!pip install scipy==1.8.0
!pip install pyg-nightly
G = nx.Graph()
ar = (df['items']); G.add_edges_from(ar)
pr = nx.pagerank(G)
nsize = np.array([v for v in pr.values()])
nsize = 2000*(nsize-min(nsize)) / (max(nsize)-min(nsize))
pos = nx.spring_layout(G) #spring 레이아웃을 사용하기
plt.figure(figsize=(16,12)); plt.axis('off')
nx.draw_networkx(G, font_family='NanumGothic', font_size=20, pos=pos,\
node_color=list(pr.values()), node_size=nsize*10, alpha=0.7,\
edge_color='.5', cmap=plt.cm.coolwarm)
plt.savefig('네트워크 그래프_우크라이나.png', bbox_inches='tight')