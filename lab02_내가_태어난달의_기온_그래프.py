# -*- coding: utf-8 -*-
"""LAB02. 내가 태어난달의 기온 그래프

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xldBoADKCbpR-HTBUj-sMcPqxqBokHoY

# **내가 태어난 달의 기온 그래프**
1. 기상자료개방포털에 접속하여 기온 데이터 CSV파일을 다운로드하고 Colab 디렉토리에 업로드합니다
2. 한글 폰트를 적용하고 csv 파일을 읽어와 데이터프레임 df에 할당합니다. 결측치가 있는지 확인합니다.
3.결측치는 이전 행의 값으로 채우고 열 이름은 영문 알파벳과 밑줄 기호만으로 변경합니다.
4. 그래프를 생성합니다.
"""

import matplotlib.pyplot as plt
import pandas as pd
#<2번> csv파일로 읽어와 데이터프레임 df에 할당
df = pd.read_csv("/content/sample_data/기온.csv", encoding="cp949")
#<결측치 있는지 화인>
print(df.isnull().sum())

df.head(3)

df.info()

#<2번> 한글폰트 적용
import sys

# Google Colab 환경에서 실행 중인지 확인
if 'google.colab' in sys.modules:
    # debconf를 Noninteractive 모드로 설정
    !echo 'debconf debconf/frontend select Noninteractive' | \
    debconf-set-selections

    # fonts-nanum 패키지를 설치
    !sudo apt-get -qq -y install fonts-nanum

    # Matplotlib의 폰트 매니저 가져오기
    import matplotlib.font_manager as fm

    # 나눔 폰트의 시스템 경로 찾기
    font_files = fm.findSystemFonts(fontpaths=['/usr/share/fonts/truetype/nanum'])

    # 찾은 각 나눔 폰트를 Matplotlib 폰트 매니저에 추가
    for fpath in font_files:
        fm.fontManager.addfont(fpath)

import matplotlib.font_manager as fm
#<3번> 결측치는 이전행의 값으로 채우기
df2 = df.fillna(method='ffill')
#<3번> 열이름은 영문 알파벳과 밑줄 기호만으로 변경
df2.rename(columns={'최저기온(°C)':'min_temp'}, inplace=True)
df2.rename(columns={'평균기온(°C)':'avg_temp'}, inplace=True)
df2.rename(columns={'최고기온(°C)':'max_temp'}, inplace=True)

#<4번> 그래프 생성
#글꼴 설정
plt.rcParams['font.family'] = 'NanumGothic'
#(-) 기호 깨지지 않게 설정
plt.rcParams['axes.unicode_minus'] = False
#차트 제목 설정
plt.title('서울시 2000년 8월 기온 변화')
#그래프 색상 설정
plt.plot(range(1,len(df2)+1), df2['max_temp'], label='최고기온', marker='o', markersize=4, c='r')
plt.plot(range(1,len(df2)+1), df2['avg_temp'], label='평균기온', marker='o', markersize=4, c='g')
plt.plot(range(1,len(df2)+1), df2['min_temp'], label='최저기온', marker='o', markersize=4, c='b')
#축 설정
# plt.axis([0, 30, 0, 40])
plt.xlabel('일')
plt.ylabel('기온')
#범례 설정
plt.legend()
plt.show()